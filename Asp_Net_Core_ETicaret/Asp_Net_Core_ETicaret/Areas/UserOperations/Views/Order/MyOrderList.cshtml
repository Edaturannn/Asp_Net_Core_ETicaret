@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<EntityLayer.Concrete.OrderTable>
@{
    ViewData["Title"] = "My Order List";
    Layout = "~/Views/Shared/_UserLayout.cshtml";

}

<div class="row">
    <div class="col-4 offset-4">
        <h1 class="display-4 border-bottom text-center pb-2"><b>@ViewData["Title"]</b></h1>
    </div>
</div>

<br />
<div class="row">
    <div class="col-4">
        <a href="/User/User" class="btn btn-info text-white"><i class="fas fa-reply"></i></a>
    </div>
</div>
<br />

<div class="container">
    <div class="row">
        <table class="table table-hover">
            <tr>
                <th>ID</th>
                <th>Product ID</th>
                <th>Order Create Date</th>
                <th>Address</th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td><b>@item.ID</b></td>
                    <td>@item.ProductID</td>
                    <td>@(((DateTime)item.OrderCreateDate).ToString("dd-MMM-yyyy"))</td>
                    <td>@item.Address</td>
                    <td><a href="/AdminOperations/Order/OrderAllDelete/@item.OrderID" class="btn btn-danger text-white"><i class="fas fa-trash"></i>  <b>Delete</b></a></td>
                </tr>
            }
        </table>
    </div>
    @Html.PagedListPager((IPagedList)Model,page=>Url.Action("MyOrderList",new{page}),new X.PagedList.Web.Common.PagedListRenderOptions
    {
        LiElementClasses=new List<string>
        {"page-link"}
    })
</div>




